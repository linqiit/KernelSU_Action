name: Build Static Bash on ARM64

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: |
            /var/cache/apt
            bash-5.2.37.tar.gz
          key: ${{ runner.os }}-deps-${{ hashFiles('**/apt-packages.txt') }}
          restore-keys: |
            ${{ runner.os }}-deps-

      - name: Build Bash on ARM64
        uses: uraimo/run-on-arch-action@v2.8.1
        with:
          arch: aarch64
          distro: ubuntu22.04
          dockerRunArgs: |
            --volume "${{ github.workspace }}:/workspace"
          run: |
            set -ex
            cd /workspace

            apt-get update && apt-get install -y \
              build-essential wget upx xz-utils \
              gcc-aarch64-linux-gnu binutils-aarch64-linux-gnu make \
              libc6-dev-arm64-cross \
              libncurses-dev libreadline-dev

            wget https://ftp.gnu.org/gnu/bash/bash-5.2.37.tar.gz
            tar -xf bash-5.2.37.tar.gz
            cd bash-5.2.37

            export CC="aarch64-linux-gnu-gcc"
            export CFLAGS="-O2 -fPIC"
            export LDFLAGS="-static"
            export LIBS="-lncurses -lreadline"

            ./configure --host=aarch64-linux-gnu \
                        --disable-nls \
                        --without-bash-malloc \
                        --enable-static-link

            make || { echo "Make failed"; exit 1; }

            strip --strip-all bash
            upx --best --lzma bash

            cp bash /workspace/bash-static-arm64

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: bash-static-arm64-${{ github.run_id }}
          path: bash-static-arm64