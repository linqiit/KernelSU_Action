name: Build Ubuntu rootfs
on:
  workflow_dispatch:
    inputs:
      target_arch:
        description: "Target architecture"
        default: "amd64"  # 这里默认设置为常见的amd64架构，你可按需更改
        required: true
      ubuntu_version:
        description: "Ubuntu version"
        default: "jammy"  # 以Ubuntu 22.04 jammy为例，也可按需选其他版本如focal等
        required: true

permissions:
  contents: write

jobs:
  make_ubuntu_rootfs:
    runs-on: ubuntu-latest
    env:
      TARGET_ARCH: ${{ github.event.inputs.target_arch }}
      UBUNTU_VERSION: ${{ github.event.inputs.ubuntu_version }}
      RELEASE_NAME: ubuntu-rootfs-${{ github.event.inputs.ubuntu_version }}-${{ github.event.inputs.target_arch }}
    steps:
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y debootstrap qemu-user-static binfmt-support

      - name: Make rootfs
        run: |
          echo ${TARGET_ARCH}
          echo ${UBUNTU_VERSION}
          echo ${RELEASE_NAME}

          sudo debootstrap \
            --arch=${TARGET_ARCH} \
            --variant=minbase \
            "${UBUNTU_VERSION}" \
            rootfs \
            "http://archive.ubuntu.com/ubuntu/"  # 这里使用官方源，也可替换为国内镜像源提升速度

          # 进行一些自定义配置，比如设置DNS等（示例，可按需扩展更多配置）
          sudo cp /etc/resolv.conf rootfs/etc/resolv.conf
          echo "127.0.0.1   localhost.localdomain localhost" | sudo tee rootfs/etc/hosts
          echo "::1         localhost.localdomain localhost ip6-localhost ip6-loopback" | sudo tee -a rootfs/etc/hosts

          sudo tar --exclude='dev/*' -czf "${RELEASE_NAME}.tar.gz" rootfs

      - name: Package output
        run: gzip -kf -9 "${RELEASE_NAME}.tar"

      - uses: actions/upload-artifact@main
        with:
          name: ubuntu-rootfs-${{ github.event.inputs.ubuntu_version }}-${{ github.event.inputs.target_arch }}.tar.gz
          path: ubuntu-rootfs-${{ github.event.inputs.ubuntu_version }}-${{ github.event.inputs.target_arch }}.tar.gz

      - name: Upload release
        uses: ncipollo/release-action@v1.14.0
        with:
          prerelease: true
          tag: "ubuntu-rootfs"
          artifacts: ubuntu-rootfs-${{ github.event.inputs.ubuntu_version }}-${{ github.event.inputs.target_arch }}.tar.gz
          allowUpdates: true
          replacesArtifacts: true
          body: |
            [action](${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}})

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2.0.6
        with:
          delete_workflow_pattern: "build_ubuntu_rootfs.yaml"
          retain_days: 0
          keep_minimum_runs: 1
